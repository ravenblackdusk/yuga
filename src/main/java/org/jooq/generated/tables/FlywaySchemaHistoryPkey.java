/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableOptions;
import org.jooq.generated.Public;
import org.jooq.generated.tables.records.FlywaySchemaHistoryPkeyRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FlywaySchemaHistoryPkey extends TableImpl<FlywaySchemaHistoryPkeyRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.flyway_schema_history_pkey</code>
     */
    public static final FlywaySchemaHistoryPkey FLYWAY_SCHEMA_HISTORY_PKEY = new FlywaySchemaHistoryPkey();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FlywaySchemaHistoryPkeyRecord> getRecordType() {
        return FlywaySchemaHistoryPkeyRecord.class;
    }

    private FlywaySchemaHistoryPkey(Name alias, Table<FlywaySchemaHistoryPkeyRecord> aliased) {
        this(alias, aliased, null);
    }

    private FlywaySchemaHistoryPkey(Name alias, Table<FlywaySchemaHistoryPkeyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.flyway_schema_history_pkey</code> table
     * reference
     */
    public FlywaySchemaHistoryPkey(String alias) {
        this(DSL.name(alias), FLYWAY_SCHEMA_HISTORY_PKEY);
    }

    /**
     * Create an aliased <code>public.flyway_schema_history_pkey</code> table
     * reference
     */
    public FlywaySchemaHistoryPkey(Name alias) {
        this(alias, FLYWAY_SCHEMA_HISTORY_PKEY);
    }

    /**
     * Create a <code>public.flyway_schema_history_pkey</code> table reference
     */
    public FlywaySchemaHistoryPkey() {
        this(DSL.name("flyway_schema_history_pkey"), null);
    }

    public <O extends Record> FlywaySchemaHistoryPkey(Table<O> child, ForeignKey<O, FlywaySchemaHistoryPkeyRecord> key) {
        super(child, key, FLYWAY_SCHEMA_HISTORY_PKEY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public FlywaySchemaHistoryPkey as(String alias) {
        return new FlywaySchemaHistoryPkey(DSL.name(alias), this);
    }

    @Override
    public FlywaySchemaHistoryPkey as(Name alias) {
        return new FlywaySchemaHistoryPkey(alias, this);
    }

    @Override
    public FlywaySchemaHistoryPkey as(Table<?> alias) {
        return new FlywaySchemaHistoryPkey(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public FlywaySchemaHistoryPkey rename(String name) {
        return new FlywaySchemaHistoryPkey(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FlywaySchemaHistoryPkey rename(Name name) {
        return new FlywaySchemaHistoryPkey(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public FlywaySchemaHistoryPkey rename(Table<?> name) {
        return new FlywaySchemaHistoryPkey(name.getQualifiedName(), null);
    }
}
