/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableOptions;
import org.jooq.generated.Public;
import org.jooq.generated.tables.records.BarIdSeqRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BarIdSeq extends TableImpl<BarIdSeqRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.bar_id_seq</code>
     */
    public static final BarIdSeq BAR_ID_SEQ = new BarIdSeq();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BarIdSeqRecord> getRecordType() {
        return BarIdSeqRecord.class;
    }

    private BarIdSeq(Name alias, Table<BarIdSeqRecord> aliased) {
        this(alias, aliased, null);
    }

    private BarIdSeq(Name alias, Table<BarIdSeqRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.bar_id_seq</code> table reference
     */
    public BarIdSeq(String alias) {
        this(DSL.name(alias), BAR_ID_SEQ);
    }

    /**
     * Create an aliased <code>public.bar_id_seq</code> table reference
     */
    public BarIdSeq(Name alias) {
        this(alias, BAR_ID_SEQ);
    }

    /**
     * Create a <code>public.bar_id_seq</code> table reference
     */
    public BarIdSeq() {
        this(DSL.name("bar_id_seq"), null);
    }

    public <O extends Record> BarIdSeq(Table<O> child, ForeignKey<O, BarIdSeqRecord> key) {
        super(child, key, BAR_ID_SEQ);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public BarIdSeq as(String alias) {
        return new BarIdSeq(DSL.name(alias), this);
    }

    @Override
    public BarIdSeq as(Name alias) {
        return new BarIdSeq(alias, this);
    }

    @Override
    public BarIdSeq as(Table<?> alias) {
        return new BarIdSeq(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public BarIdSeq rename(String name) {
        return new BarIdSeq(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BarIdSeq rename(Name name) {
        return new BarIdSeq(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public BarIdSeq rename(Table<?> name) {
        return new BarIdSeq(name.getQualifiedName(), null);
    }
}
